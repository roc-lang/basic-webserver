#!/usr/bin/expect

# uncomment line below for debugging
# exp_internal 1

set timeout 7

source ./ci/expect_scripts/shared-code.exp

spawn $env(TESTS_DIR)dir-test


set expected_output [normalize_output "
Testing Dir functions...
This will create and manipulate test directories in the current directory.

Testing Dir.create!:
Created directory: test_dir_create
Is a directory: Bool.true
Directory listing: drwxr-xr-x \\d+ \\w+ (\\w+ )? *\\d+ \\w+ +\\d+ \\d+:\\d+ test_dir_create
Creating existing directory result: Expected error
Creating directory without parent result: Expected error

Testing Dir.create_all!:
Nested directory structure:
test_parent_all
test_parent_all/test_child_all
test_parent_all/test_child_all/test_grandchild_all

Number of directories created: 3
Expected 3 directories: Bool.true

Testing Dir.delete_empty!:
Empty directory exists after delete: Bool.false
Deleting non-empty directory result: Expected error
Deleting non-existent directory result: Expected error

Testing Dir.delete_all!:
Files in complex directory structure:
test_complex_for_delete_all/file1.txt
test_complex_for_delete_all/subdir1/file2.txt
test_complex_for_delete_all/subdir2/file4.txt
test_complex_for_delete_all/subdir1/subsubdir/file3.txt
Number of files: 4
Complex directory is gone after delete_all: Bool.true
Deleting non-existent directory with delete_all result: Expected error

I ran all Dir function tests.

Cleaning up test directories...
Cleanup completed.
Ran all tests.
"]

expect -re $expected_output {
    expect eof {
        check_exit_and_segfault
    }  
}

puts stderr "\nExpect script failed: output was not as expected. Diff the output with expected_output in this script. Alternatively, uncomment `exp_internal 1` to debug."
exit 1